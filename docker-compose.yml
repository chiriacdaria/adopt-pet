
services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: Albastru27*
      POSTGRES_DB: adoption_app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  backend:
    build: ./backend
    env_file: 
      - ./backend/.env
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: root
      DB_PASSWORD: Albastru27*
      DB_NAME: adoption_app
    depends_on:
      - db
    ports:
      - 5001:5001
    volumes:
      - ./backend/src:/app/src
      - ./backend/migrations:/app/migrations
      - ./backend/package.json:/app/package.json
      - ./backend/package-lock.json:/app/package-lock.json
    command: "sh -c 'until nc -z db 5432; do echo waiting for db; sleep 2; done && ls -alh /app/migrations && npx sequelize-cli db:migrate && nodemon /app/src/app.js'"

  frontend:
    build: ./frontend
    environment:
      - CHOKIDAR_USEPOLLING=true  # Ensure file watching works properly inside Docker
      - NODE_OPTIONS=--openssl-legacy-provider
    ports:
      - 3000:3000  # Expose port 3000 (default for React dev server)
    volumes:
      - ./frontend/src:/app/src  # Sync local src folder with container src
      - ./frontend/public:/app/public  # Sync local public folder with container public
      - ./frontend/package.json:/app/package.json  # Sync package.json for dependency changes
      - ./frontend/package-lock.json:/app/package-lock.json  # Sync package-lock.json
    depends_on:
      - backend
    command: npm run start

volumes:
  postgres_data:  # Make sure the name here matches the volume used in the db service
